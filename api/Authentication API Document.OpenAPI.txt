{
  "openapi": "3.0.3",
  "info": {
    "title": "Authentication API Document.paw",
    "description": "",
    "version": "1.0.0",
    "contact": {
      "name": "milko",
      "email": "skofic@gmail.com"
    }
  },
  "servers": [
    {
      "url": "https://echo.paw.cloud/",
      "description": ""
    }
  ],
  "paths": {
    "/{Protocol}:/{Host}:{Port}/_db/{Db}/{Path}/auth/login/": {
      "post": {
        "summary": "Login",
        "description": "The service can be used to *login* a user.\n\nThe service expects the login *credentials* in the *body*:\n\n- `username`: The username or user code.\n- `password`: The user password.\n\nIf successful, the service will return the user record [`200`]:\n\n- `username`: The user code.\n- `role`: The list of user roles or permissions.\n- `default`: A boolean indicating whether it is a default user.\n\nIf unsuccessful, the service will return an error:\n\n- `401`: Invalid password.\n- `404`: Invalid user.\n- `500`: Other types of error.",
        "operationId": "458d3efd-5b68-45f2-86c4-56456cf9c423",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json; charset=utf-8",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "The service can be used to *login* a user.\n\nThe service expects the login *credentials* in the *body*:\n\n- `username`: The username or user code.\n- `password`: The user password.\n\nIf successful, the service will return the user record [`200`]:\n\n- `username`: The user code.\n- `role`: The list of user roles or permissions.\n- `default`: A boolean indicating whether it is a default user.\n\nIf unsuccessful, the service will return an error:\n\n- `401`: Invalid password.\n- `404`: Invalid user.\n- `500`: Other types of error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "admin"
                  },
                  "password": {
                    "type": "string",
                    "example": "secret"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_key": {
                        "type": "string",
                        "example": "test-01"
                      },
                      "_id": {
                        "type": "string",
                        "example": "terms/test-01"
                      },
                      "_rev": {
                        "type": "string",
                        "example": "_h748Dtq---"
                      },
                      "_code": {
                        "type": "object",
                        "properties": {
                          "_lid": {
                            "type": "string",
                            "example": "test-01"
                          },
                          "_gid": {
                            "type": "string",
                            "example": "test-01"
                          },
                          "_aid": {
                            "type": "string",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "test-01"
                            ]
                          }
                        }
                      },
                      "_info": {
                        "type": "object",
                        "properties": {
                          "_title": {
                            "type": "object",
                            "properties": {
                              "iso_639_3_eng": {
                                "type": "string",
                                "example": "Test term 1"
                              }
                            }
                          }
                        }
                      },
                      "_data": {
                        "type": "object",
                        "properties": {
                          "_scalar": {
                            "type": "object",
                            "properties": {
                              "_type": {
                                "type": "string",
                                "example": "_type_object"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Set-Cookie": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "FOXXSID=5bfd413d583522aaf79250ee76b5e1edad98684e8aa8363b3bb66e93e350a9c4; expires=Mon, 10-Jun-2024 15:35:50 GMT; path=/, FOXXSID.sig=1918ffa9edcdd569135fbb135551081f673861758014dd1a2626bc6e4b7780c0; expires=Mon, 10-Jun-2024 15:35:50 GMT; path=/"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "642"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{Protocol}:/{Host}:{Port}/_db/{Db}/{Path}/auth/whoami/": {
      "get": {
        "summary": "Who am I?",
        "description": "Use this service to retrieve information on the current session user.\n\nThe service requires no parameters, if there is a current user, the service will return the current user record [`200`]:\n\n- `username`: The user code.\n- `role`: The list of user roles or permissions.\n- `default`: A boolean indicating whether it is a default user.\n\nIn all other cases the service will return:\n\n- `404`: This status will be returned if there is no current user.\n- `500`: This status will be returned for any other type of error.",
        "operationId": "8b28dc7d-00ea-4a18-8cee-23c7400e52ca",
        "parameters": [],
        "requestBody": {
          "description": "Use this service to retrieve information on the current session user.\n\nThe service requires no parameters, if there is a current user, the service will return the current user record [`200`]:\n\n- `username`: The user code.\n- `role`: The list of user roles or permissions.\n- `default`: A boolean indicating whether it is a default user.\n\nIn all other cases the service will return:\n\n- `404`: This status will be returned if there is no current user.\n- `500`: This status will be returned for any other type of error.",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "terms/test-01"
                    },
                    "_key": {
                      "type": "string",
                      "example": "test-01"
                    },
                    "_rev": {
                      "type": "string",
                      "example": "_h56P1N6---"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Set-Cookie": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "FOXXSID=bec0e30c720ec6d86402be6935787e0b34e3742e893c35bdcc44a3b71c737ff7; expires=Tue, 04-Jun-2024 12:05:10 GMT; path=/, FOXXSID.sig=bb3f4d0f9b9eb3ca6eff23b1b5ee48b88d8283bcdd162123f3fa21868de8c9ff; expires=Tue, 04-Jun-2024 12:05:10 GMT; path=/"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "61"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{Protocol}:/{Host}:{Port}/_db/{Db}/{Path}/auth/logout/": {
      "get": {
        "summary": "Logout",
        "description": "Use this service to logout the current user.\n\nThe service requires no parameters, if there is a current user, the service will logout the user and return its record [`200`]:\n\n- `username`: The user code.\n- `role`: The list of user roles or permissions.\n- `default`: A boolean indicating whether it is a default user.\n\nIn all other cases the service will return:\n\n- `404`: This status will be returned if there is no current user.\n- `500`: This status will be returned for any other type of error.",
        "operationId": "ceb4da4a-efb8-4d17-a4ca-831d9308ea7e",
        "parameters": [],
        "requestBody": {
          "description": "Use this service to logout the current user.\n\nThe service requires no parameters, if there is a current user, the service will logout the user and return its record [`200`]:\n\n- `username`: The user code.\n- `role`: The list of user roles or permissions.\n- `default`: A boolean indicating whether it is a default user.\n\nIn all other cases the service will return:\n\n- `404`: This status will be returned if there is no current user.\n- `500`: This status will be returned for any other type of error.",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "removed": {
                      "type": "integer",
                      "format": "int64",
                      "example": 2
                    },
                    "ignored": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Set-Cookie": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "FOXXSID=a4baa619dd416b45ca429a80533ad3208694f185ba622c4c2f3efd700382c4b6; expires=Wed, 05-Jun-2024 14:29:10 GMT; path=/, FOXXSID.sig=efd5d9eb1fc24d2762af4b0e0793d09afd2f7e3d089028659a01e33d31ba3677; expires=Wed, 05-Jun-2024 14:29:10 GMT; path=/"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "25"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{Protocol}:/{Host}:{Port}/_db/{Db}/{Path}/user/signup/": {
      "post": {
        "summary": "Signup user",
        "description": "Use this service to create a new user.\n\n*In order to create a user, the current user must have the `admin` role*.\n\nThe service expects the user information in the body:\n\n- `username`: The user code.\n- `role`: The list of user roles or permissions.\n- `default`: A boolean indicating whether it is a default user.\n\nThe `role` property is an array that may contain none, one or more codes. The property is expected to be a *controlled vocabulary*, only the `admin` value is used in this set of services, it indicates that the user is an *administrator* and that he/she can manage users.\n\nIf the operation is successfull the service will return the user record [`200`]:\n\n- `username`: The user code.\n- `role`: The list of user roles or permissions.\n- `default`: A boolean indicating whether it is a default user.\n\nIf the operation does not succeed, the service will return:\n\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `409`: **Username conflict**: the service will return this code if the provided user code already exists.\n- `500`: For other types of error.",
        "operationId": "fbf54a75-fd0b-4b80-94aa-4f094bfe55c4",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json; charset=utf-8",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "Use this service to create a new user.\n\n*In order to create a user, the current user must have the `admin` role*.\n\nThe service expects the user information in the body:\n\n- `username`: The user code.\n- `role`: The list of user roles or permissions.\n- `default`: A boolean indicating whether it is a default user.\n\nThe `role` property is an array that may contain none, one or more codes. The property is expected to be a *controlled vocabulary*, only the `admin` value is used in this set of services, it indicates that the user is an *administrator* and that he/she can manage users.\n\nIf the operation is successfull the service will return the user record [`200`]:\n\n- `username`: The user code.\n- `role`: The list of user roles or permissions.\n- `default`: A boolean indicating whether it is a default user.\n\nIf the operation does not succeed, the service will return:\n\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `409`: **Username conflict**: the service will return this code if the provided user code already exists.\n- `500`: For other types of error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "custom"
                    ]
                  },
                  "username": {
                    "type": "string",
                    "example": "test"
                  },
                  "password": {
                    "type": "string",
                    "example": "pass"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_key": {
                        "type": "string",
                        "example": "8194f5d7-b446-4dbc-b218-98fd2cb61093"
                      },
                      "_description": {
                        "type": "object",
                        "properties": {
                          "iso_639_3_eng": {
                            "type": "string",
                            "example": "Modelled vulnerability and risk indices at the level of each GCU and for each of the populations (species) studied, with one value is available per year from 1950. The models used are SurEau (Ruffault et al., 2022) and Castanea (Dufrêne et al, 2005). Climatic data were obtained from ERA5-land, soil data from soilgrids250 and LAI from MODIS."
                          }
                        }
                      },
                      "_subject": {
                        "type": "string",
                        "example": "chr_subject_stand"
                      },
                      "_title": {
                        "type": "object",
                        "properties": {
                          "iso_639_3_eng": {
                            "type": "string",
                            "example": "Modelled vulnerability and risk indices for FORGENIUS"
                          }
                        }
                      },
                      "std_dataset": {
                        "type": "string",
                        "example": "FORGENIUS_WP1_MODEL"
                      },
                      "std_date_submission": {
                        "type": "string",
                        "example": "20231111"
                      },
                      "std_project": {
                        "type": "string",
                        "example": "FORGENIUS"
                      },
                      "std_terms_key": {
                        "type": "string",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "gcu_id_number",
                          "species",
                          "std_date"
                        ]
                      },
                      "std_terms_summary": {
                        "type": "string",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "gcu_id_number",
                          "species",
                          "std_date"
                        ]
                      },
                      "std_terms": {
                        "type": "string",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "chr_AvYearDroughtIdx",
                          "chr_CarbonStarvation",
                          "chr_DessiccationTolerance",
                          "chr_FrostDamage",
                          "chr_VulWildFire",
                          "gcu_id_number",
                          "species",
                          "std_date"
                        ]
                      },
                      "std_terms_quant": {
                        "type": "string",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "chr_AvYearDroughtIdx",
                          "chr_CarbonStarvation",
                          "chr_DessiccationTolerance",
                          "chr_FrostDamage",
                          "chr_VulWildFire"
                        ]
                      },
                      "_domain": {
                        "type": "string",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "chr_model"
                        ]
                      },
                      "_classes": {
                        "type": "string",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "_class_category",
                          "_class_identifier",
                          "_class_quantity",
                          "_class_time"
                        ]
                      },
                      "species_list": {
                        "type": "string",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "Fagus sylvatica",
                          "Picea abies",
                          "Pinus sylvestris",
                          "Quercus petraea",
                          "Quercus robur"
                        ]
                      },
                      "_subjects": {
                        "type": "string",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "chr_subject_stand"
                        ]
                      },
                      "std_date_end": {
                        "type": "string",
                        "example": "2020"
                      },
                      "std_date_start": {
                        "type": "string",
                        "example": "1950"
                      },
                      "count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 90880
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "1345"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{Protocol}:/{Host}:{Port}/_db/{Db}/{Path}/user/users/": {
      "post": {
        "summary": "List users",
        "description": "Use this service to consult registered users.\n\n*In order to list users, the current user must have the `admin` role*.\n\nThe service will return the *list of users* that *match the selection criteria* provided in the *request body*. The criteria selects all terms that match the provided body items.\n\nThe body contains the selection criteria:\n\n- `start`: Start position in results.\n- `limit`: Number of elements to be returned.\n- `username`: Username search pattern. The supported wildcards are `_` to match a single arbitrary character, and `%` to match any number of arbitrary characters. Literal `%` and `_` need to be escaped with a backslash. Backslashes need to be escaped themselves.\n- `role`: The user roles, set all roles that the selected users must match.\n- `default`: Set `true` to select only default users; `false` for all others.\n\nThe service will return the selected records that have the following structure:\n\n- `username`: The user code.\n- `role`: The list of user roles or permissions.\n- `default`: A boolean indicating whether it is a default user.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `500`: Other errors.",
        "operationId": "4fa523ec-4ddd-42a2-8d3f-9da1af96788c",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json; charset=utf-8",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "Use this service to consult registered users.\n\n*In order to list users, the current user must have the `admin` role*.\n\nThe service will return the *list of users* that *match the selection criteria* provided in the *request body*. The criteria selects all terms that match the provided body items.\n\nThe body contains the selection criteria:\n\n- `start`: Start position in results.\n- `limit`: Number of elements to be returned.\n- `username`: Username search pattern. The supported wildcards are `_` to match a single arbitrary character, and `%` to match any number of arbitrary characters. Literal `%` and `_` need to be escaped with a backslash. Backslashes need to be escaped themselves.\n- `role`: The user roles, set all roles that the selected users must match.\n- `default`: Set `true` to select only default users; `false` for all others.\n\nThe service will return the selected records that have the following structure:\n\n- `username`: The user code.\n- `role`: The list of user roles or permissions.\n- `default`: A boolean indicating whether it is a default user.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `500`: Other errors.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "format": "int64",
                    "example": 25
                  },
                  "username": {
                    "type": "string",
                    "example": "test"
                  },
                  "default": {
                    "type": "boolean"
                  },
                  "role": {
                    "type": "string",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "custom"
                    ]
                  },
                  "start": {
                    "type": "integer",
                    "format": "int64",
                    "example": 0
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_key": {
                      "type": "string",
                      "example": "_type"
                    },
                    "_code": {
                      "type": "object",
                      "properties": {
                        "_nid": {
                          "type": "string",
                          "example": ""
                        },
                        "_lid": {
                          "type": "string",
                          "example": "type"
                        },
                        "_gid": {
                          "type": "string",
                          "example": "_type"
                        },
                        "_aid": {
                          "type": "string",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "type"
                          ]
                        }
                      }
                    },
                    "_info": {
                      "type": "object",
                      "properties": {
                        "_title": {
                          "type": "string",
                          "example": "Data type"
                        },
                        "_definition": {
                          "type": "string",
                          "example": "The data type of the descriptor's value."
                        },
                        "_description": {
                          "type": "string",
                          "example": "The *data type* defines the *type* that the *value* or *values* held by the *descriptor* should have. This type applies to the [scalar](_scalar.md) dimension of the *value*, this means that, in the case of an [array](_array.md) or [set](_set.md), the type *applies* to the list *elements*.\n\nThese are the possible values:\n\n- [Boolean](_type_boolean.md): *True* or *false* value. No other [data section](_data.md) properties are expected.\n- [Integer](_type_integer.md): *Numeric discrete* value. The [data section](_data.md) can include the following properties: [unit](_unit.md), [unit name](_unit-name.md), [range](_range.md), [valid range](_valid-range.md) and [normal range](_normal-range.md).\n- [Numeric](_type_number.md): *Numeric discrete* or *continuous* value; will be considered a *floating point number*. The [data section](_data.md) can include the following properties: [unit](_unit.md), [unit name](_unit-name.md), [range](_range.md), [valid range](_valid-range.md) and [normal range](_normal-range.md).\n- [Time-stamp](_type_number_timestamp.md): A [numeric](_type_number.md) Unix Timestamp, it is used to indicate a *precise moment in time*. The [data section](_data.md) can include the following properties: [range](_range.md), [valid range](_valid-range.md) and [normal range](_normal-range.md).\n- [String](_type_string.md): A *character* or *text* encoded in UTF-8. The [data section](_data.md) can include the following properties: [format](_format.md), [unit](_unit.md), [unit name](_unit-name.md) and [regular expression](_regexp.md).\n- [Key reference](_type_string_key.md): A [string](_type_string.md) representing the [global identifier](_gid.md) of a *document* from the *terms collection*. The [data section](_data.md) is *required* to include the [data kind](_kind.md) field which specifies the *kind of term*, these are the allowed choices:\n    - [Any term](_any-term.md): The value can reference *any term* in the *terms collection*.\n    - [Any enumeration](_any-enum.md): The value can reference *any term* *belonging* to a *controlled vocabulary*, this means that the *term* must be *referenced* in at least one *edge* with the [enumeration](_predicate_enum-of.md) [predicate](_predicate.md).\n    - [Any structure](_any-object.md): The value can reference *any term* that *defines* an *object data structure*: such terms must have the [rules section](_rule.md) property.\n    - [Any descriptor](_any-descriptor.md): The value can reference *any term* that *defines* a *descriptor*: such terms must have the [data section](_data.md) property.\n- [Document handle](_type_string_handle.md): A [string](_type_string.md) representing the [document handle](_id.md) of a *record* belonging to *any collection*. No other [data section](_data.md) properties are expected.\n- [Enumeration](_type_string_enum.md): A [string](_type_string.md) representing the [global identifier](_gid.md) of a *document* belonging to the *terms collection* that is part of a *controlled vocabulary*. The [data section](_data.md) can include the following properties: [format](_format.md), [unit](_unit.md), [unit name](_unit-name.md) and [regular expression](_regexp.md). In addition, the [data section](_data.md) *requires* the [data kind](_kind.md) field, that is *must* *specify* from which *controlled vocabulary* the value must be *chosen*.\n- [Object](_type_object.md): An *object data structure*. The [data section](_data.md) is required to contain the [data kind](_kind.md) field, and these are the allowed choices:\n    - *A [global identifier](_gid.md)*: It must be one or more [key references](_type_string_key.md) to *terms* that define a *data structure type*, the term *must include* the [rules section](_rule.md). This means that the value *must* be an *object* of *that type*.\n    - [Any structure](_any-object.md): The value can be an *object* of *any type*, but its *properties* will be *parsed* and *validated*. This means that only the *constraints* at the *object level* will be *ignored*.\n- [GeoJSON geometry](_type_object_geo-json.md): An *object data structure* representing a *geographic structure* encoded in the [GeoJSON](https://geojson.org) data format. No other [data section](_data.md) properties are expected.\n\nIf *this property* is *omitted*, it means that the *value* can be of *any scalar type*."
                        }
                      }
                    },
                    "_data": {
                      "type": "object",
                      "properties": {
                        "_class": {
                          "type": "string",
                          "example": "_class_category"
                        },
                        "_scalar": {
                          "type": "object",
                          "properties": {
                            "_type": {
                              "type": "string",
                              "example": "_type_string_enum"
                            },
                            "_kind": {
                              "type": "string",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "_type"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Set-Cookie": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "FOXXSID=5ee545c953b58d48a2a156c0f1f9fea7172e10abc95a4751dbb49d52dc42e181; expires=Tue, 04-Jun-2024 20:28:42 GMT; path=/, FOXXSID.sig=bfbae872b676dc617cdad4bbad3b0c8d3e0816cd629dd22938856d2dc3321c07; expires=Tue, 04-Jun-2024 20:28:42 GMT; path=/"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "4629"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{Protocol}:/{Host}:{Port}/_db/{Db}/{Path}/user/reset/": {
      "post": {
        "summary": "Reset users",
        "description": "Reset users and authentication data.\n\n*In order to use this service, the current user must have the admin role*.\n\nThis service can be used to:\n\n- *Delete default users*: If you provide `true` in the default body parameter, the service will delete all default users.\n- *Delete created users*: If you provide `true` in the created body parameter, the service will delete all created users.\n- *Refresh authentication data*: If you provide `true` in the auth body parameter, the service will refresh administrator, user and cookie authentication data.\n\nWhen deleting users, the service will also delete eventual sessions connected to the deleted users, this means that these users will also be disconnected.\n\nDefault users can be managed through the services settings, you can change the username and the password: to register these changes you call this service with the `default` parameter set to `true`: this will remove the former user, clear related sessions, and will re-create the modified default user.\n\n*Note that in all cases default users will be created, if not already there*.\n\nThe service expects an object in the body:\n\n- `default`: {Boolean}: Whether to delete *default* users.\n- `created`: {Boolean}: Whether to delete *created* users.\n- `auth`: {Boolean}: Whether to refresh authentication data.\n\nIf the operation succeeds the service will return the list of operations [`200`], if the operation fails:\n\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `500`: For all other errors.\n",
        "operationId": "8b218f57-ed35-4155-b003-7752d71588ba",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json; charset=utf-8",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "Reset users and authentication data.\n\n*In order to use this service, the current user must have the admin role*.\n\nThis service can be used to:\n\n- *Delete default users*: If you provide `true` in the default body parameter, the service will delete all default users.\n- *Delete created users*: If you provide `true` in the created body parameter, the service will delete all created users.\n- *Refresh authentication data*: If you provide `true` in the auth body parameter, the service will refresh administrator, user and cookie authentication data.\n\nWhen deleting users, the service will also delete eventual sessions connected to the deleted users, this means that these users will also be disconnected.\n\nDefault users can be managed through the services settings, you can change the username and the password: to register these changes you call this service with the `default` parameter set to `true`: this will remove the former user, clear related sessions, and will re-create the modified default user.\n\n*Note that in all cases default users will be created, if not already there*.\n\nThe service expects an object in the body:\n\n- `default`: {Boolean}: Whether to delete *default* users.\n- `created`: {Boolean}: Whether to delete *created* users.\n- `auth`: {Boolean}: Whether to refresh authentication data.\n\nIf the operation succeeds the service will return the list of operations [`200`], if the operation fails:\n\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `500`: For all other errors.\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "default": {
                    "type": "boolean"
                  },
                  "created": {
                    "type": "boolean"
                  },
                  "auth": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Set-Cookie": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "FOXXSID=a4baa619dd416b45ca429a80533ad3208694f185ba622c4c2f3efd700382c4b6; expires=Wed, 05-Jun-2024 12:49:29 GMT; path=/, FOXXSID.sig=efd5d9eb1fc24d2762af4b0e0793d09afd2f7e3d089028659a01e33d31ba3677; expires=Wed, 05-Jun-2024 12:49:29 GMT; path=/"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "9"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{Protocol}:/{Host}:{Port}/_db/{Db}/{Path}/user/password/": {
      "patch": {
        "summary": "Set user password",
        "description": "This service is used by administrators to change the password of a specific user.\n\n*In order to use this service, the current user must have the `admin` role*.\n\nThe service expects the user primary key, `_key`, in the `key` *path query parameter*.\n\nThe *new password* must be provided as a `password` property in the body.\n\nIf the service is successfull, [`200`], the service will return the user record as follows:\n\n- `username`: The user code.\n- `default`: A boolean indicating whether it is a default user.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `404`: **User not found***: the service will return this code if the provided `key` is not associated with any user.\n- `409`: **Conflict**: the user document changed in between the time it was read and the time it was modified\n- `500`: Other errors.",
        "operationId": "90aff3eb-6bfe-4862-9490-45e5cd05d799",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "284310176592",
              "description": ""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json; charset=utf-8",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "This service is used by administrators to change the password of a specific user.\n\n*In order to use this service, the current user must have the `admin` role*.\n\nThe service expects the user primary key, `_key`, in the `key` *path query parameter*.\n\nThe *new password* must be provided as a `password` property in the body.\n\nIf the service is successfull, [`200`], the service will return the user record as follows:\n\n- `username`: The user code.\n- `default`: A boolean indicating whether it is a default user.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `404`: **User not found***: the service will return this code if the provided `key` is not associated with any user.\n- `409`: **Conflict**: the user document changed in between the time it was read and the time it was modified\n- `500`: Other errors.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "example": "password"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "example": "test"
                    },
                    "default": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Set-Cookie": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "FOXXSID=a8f583038941c1105ea9b39cb8f3eca12500f4b34a41a3487033967afd8f2cad; expires=Sat, 01-Jun-2024 16:02:58 GMT; path=/, FOXXSID.sig=21406fa7acd1275ebb16dfb84452d4435c9366391b03aabbd084309cc4fdb0da; expires=Sat, 01-Jun-2024 16:02:58 GMT; path=/"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "35"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{Protocol}:/{Host}:{Port}/_db/{Db}/{Path}/user/pass/": {
      "patch": {
        "summary": "Change my password",
        "description": "This service can be used to change the current user's password.\n\nThe *new password* must be provided as a `password` property in the body.\n\nIf the service is successfull, [`200`], the service will return `{ \"success\": true }`.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `404`: **User not found***: the service will return this code if the current session user cannot be located, or if there is no current user in the session.\n- `409`: **Conflict**: the user document changed in between the time it was read and the time it was modified\n- `500`: Other errors.",
        "operationId": "075974f5-4a59-4682-8270-c75bd1cffeac",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json; charset=utf-8",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "This service can be used to change the current user's password.\n\nThe *new password* must be provided as a `password` property in the body.\n\nIf the service is successfull, [`200`], the service will return `{ \"success\": true }`.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `404`: **User not found***: the service will return this code if the current session user cannot be located, or if there is no current user in the session.\n- `409`: **Conflict**: the user document changed in between the time it was read and the time it was modified\n- `500`: Other errors.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "example": "secret"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Set-Cookie": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "FOXXSID=a8f583038941c1105ea9b39cb8f3eca12500f4b34a41a3487033967afd8f2cad; expires=Sat, 01-Jun-2024 16:04:28 GMT; path=/, FOXXSID.sig=21406fa7acd1275ebb16dfb84452d4435c9366391b03aabbd084309cc4fdb0da; expires=Sat, 01-Jun-2024 16:04:28 GMT; path=/"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "16"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{Protocol}:/{Host}:{Port}/_db/{Db}/{Path}/user/role/": {
      "patch": {
        "summary": "Set user roles",
        "description": "This service is used by administrators to change the roles of a specific user.\n\n*In order to use this service, the current user must have the `admin` role*.\n\nThe service expects the user primary key, `_key`, in the `key` *path query parameter*.\n\nThe *new roles list* must be provided as an array `role` property in the body.\n\nIf the service is successfull, [`200`], the service will return the user record as follows:\n\n- `username`: The user code.\n- `role`: The new user roles.\n- `default`: A boolean indicating whether it is a default user.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `404`: **User not found***: the service will return this code if the provided `key` is not associated with any user.\n- `409`: **Conflict**: the user document changed in between the time it was read and the time it was modified\n- `500`: Other errors.",
        "operationId": "2dd0ec50-e904-4a79-9b4e-4235f5a8c38e",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "284310176592",
              "description": ""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json; charset=utf-8",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "This service is used by administrators to change the roles of a specific user.\n\n*In order to use this service, the current user must have the `admin` role*.\n\nThe service expects the user primary key, `_key`, in the `key` *path query parameter*.\n\nThe *new roles list* must be provided as an array `role` property in the body.\n\nIf the service is successfull, [`200`], the service will return the user record as follows:\n\n- `username`: The user code.\n- `role`: The new user roles.\n- `default`: A boolean indicating whether it is a default user.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `404`: **User not found***: the service will return this code if the provided `key` is not associated with any user.\n- `409`: **Conflict**: the user document changed in between the time it was read and the time it was modified\n- `500`: Other errors.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "admin",
                      "dict",
                      "read"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "example": "test"
                    },
                    "role": {
                      "type": "string",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "admin",
                        "dict",
                        "read"
                      ]
                    },
                    "default": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Set-Cookie": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "FOXXSID=a8f583038941c1105ea9b39cb8f3eca12500f4b34a41a3487033967afd8f2cad; expires=Sat, 01-Jun-2024 16:13:52 GMT; path=/, FOXXSID.sig=21406fa7acd1275ebb16dfb84452d4435c9366391b03aabbd084309cc4fdb0da; expires=Sat, 01-Jun-2024 16:13:52 GMT; path=/"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "66"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{Protocol}:/{Host}:{Port}/_db/{Db}/{Path}/user/user/": {
      "delete": {
        "summary": "Delete user",
        "description": "This service is used by administrators to delete a specific user.\n\n*In order to use this service, the current user must have the `admin` role*.\n\nThe service expects the user primary key, `_key`, in the `key` *path query parameter*.\n\nIf the service is successfull, [`200`], the service will return the deleted user record as follows:\n\n- `username`: The user code.\n- `role`: The new user roles.\n- `default`: A boolean indicating whether it is a default user.\n\nThe following errors can be returned:\n- `404`: **User not found***: the service will return this code if the provided `key` is not associated with any user.\n- `500`: Other errors.",
        "operationId": "5e157a92-0865-4ade-bc75-2efca261f4ec",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "284310176592",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "This service is used by administrators to delete a specific user.\n\n*In order to use this service, the current user must have the `admin` role*.\n\nThe service expects the user primary key, `_key`, in the `key` *path query parameter*.\n\nIf the service is successfull, [`200`], the service will return the deleted user record as follows:\n\n- `username`: The user code.\n- `role`: The new user roles.\n- `default`: A boolean indicating whether it is a default user.\n\nThe following errors can be returned:\n- `404`: **User not found***: the service will return this code if the provided `key` is not associated with any user.\n- `500`: Other errors.",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "example": "test"
                    },
                    "role": {
                      "type": "string",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "admin",
                        "dict",
                        "read"
                      ]
                    },
                    "default": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Set-Cookie": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "FOXXSID=a8f583038941c1105ea9b39cb8f3eca12500f4b34a41a3487033967afd8f2cad; expires=Sat, 01-Jun-2024 16:24:58 GMT; path=/, FOXXSID.sig=21406fa7acd1275ebb16dfb84452d4435c9366391b03aabbd084309cc4fdb0da; expires=Sat, 01-Jun-2024 16:24:58 GMT; path=/"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "66"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{Protocol}:/{Host}:{Port}/_db/{Db}/{Path}/user/usr/": {
      "delete": {
        "summary": "Delete my user",
        "description": "This service can be used to delete the current user.\n\nIf the service is successfull, [`200`], the service will return a string message with the outcome of the operation.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `404`: **User not found***: the service will return this code if the current session user cannot be located, or if there is no current user in the session.\n- `409`: **Conflict**: the user document changed in between the time it was read and the time it was modified\n- `500`: Other errors.",
        "operationId": "97d2cd50-a0a6-449c-bda5-f07c9f039325",
        "parameters": [],
        "requestBody": {
          "description": "This service can be used to delete the current user.\n\nIf the service is successfull, [`200`], the service will return a string message with the outcome of the operation.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `404`: **User not found***: the service will return this code if the current session user cannot be located, or if there is no current user in the session.\n- `409`: **Conflict**: the user document changed in between the time it was read and the time it was modified\n- `500`: Other errors.",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "value": "Deleted user admin."
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{Protocol}:/{Host}:{Port}/_db/{Db}/{Path}/util/ping/": {
      "get": {
        "summary": "Ping",
        "description": "The service should return `\"pong\"` in the response if the database is on-line and responding.",
        "operationId": "f7fa165a-aa82-4757-afe8-fb9c6228f76e",
        "parameters": [],
        "requestBody": {
          "description": "The service should return `\"pong\"` in the response if the database is on-line and responding.",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "value": "pong"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{Protocol}:/{Host}:{Port}/_db/{Db}/{Path}/util/echo/get/request/": {
      "get": {
        "summary": "Mirror the GET request",
        "description": "This service will return the full GET request.\n\n*In order to use this service, the current user must have the admin role*.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `500`: Other errors.",
        "operationId": "8ab5e79b-88f0-4d99-a9f5-b532d525eb51",
        "parameters": [],
        "requestBody": {
          "description": "This service will return the full GET request.\n\n*In order to use this service, the current user must have the admin role*.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `500`: Other errors.",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_url": {
                      "type": "object",
                      "properties": {
                        "protocol": {
                          "nullable": true
                        },
                        "slashes": {
                          "nullable": true
                        },
                        "auth": {
                          "nullable": true
                        },
                        "host": {
                          "nullable": true
                        },
                        "port": {
                          "nullable": true
                        },
                        "hostname": {
                          "nullable": true
                        },
                        "hash": {
                          "nullable": true
                        },
                        "search": {
                          "nullable": true
                        },
                        "query": {
                          "nullable": true
                        },
                        "pathname": {
                          "type": "string",
                          "example": "/auth/util/echo/get/request"
                        },
                        "path": {
                          "type": "string",
                          "example": "/auth/util/echo/get/request"
                        },
                        "href": {
                          "type": "string",
                          "example": "/auth/util/echo/get/request"
                        }
                      }
                    },
                    "_raw": {
                      "type": "object",
                      "properties": {
                        "authorized": {
                          "type": "boolean"
                        },
                        "user": {
                          "nullable": true
                        },
                        "isAdminUser": {
                          "type": "boolean"
                        },
                        "database": {
                          "type": "string",
                          "example": "EUFGIS"
                        },
                        "url": {
                          "type": "string",
                          "example": "/auth/util/echo/get/request"
                        },
                        "protocol": {
                          "type": "string",
                          "example": "http"
                        },
                        "server": {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "example": "0.0.0.0"
                            },
                            "port": {
                              "type": "integer",
                              "format": "int64",
                              "example": 8529
                            },
                            "endpoint": {
                              "type": "string",
                              "example": "http://0.0.0.0:8529"
                            }
                          }
                        },
                        "portType": {
                          "type": "string",
                          "example": "tcp/ip"
                        },
                        "client": {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "example": "192.168.65.1"
                            },
                            "port": {
                              "type": "integer",
                              "format": "int64",
                              "example": 34726
                            },
                            "id": {
                              "type": "string",
                              "example": "0"
                            }
                          }
                        },
                        "internals": {
                          "type": "object"
                        },
                        "prefix": {
                          "type": "string",
                          "example": "/"
                        },
                        "headers": {
                          "type": "object",
                          "properties": {
                            "accept": {
                              "type": "string",
                              "example": "application/json; charset=utf-8"
                            },
                            "user-agent": {
                              "type": "string",
                              "example": "RapidAPI/4.2.2 (Macintosh; OS X/13.6.7) GCDHTTPRequest"
                            },
                            "connection": {
                              "type": "string",
                              "example": "close"
                            },
                            "host": {
                              "type": "string",
                              "example": "localhost:8529"
                            }
                          }
                        },
                        "requestType": {
                          "type": "string",
                          "example": "GET"
                        },
                        "parameters": {
                          "type": "object"
                        },
                        "cookies": {
                          "type": "object",
                          "properties": {
                            "FOXXSID.sig": {
                              "type": "string",
                              "example": "d4652ca7387d996a10d099bdebafbf8b3cc7b4f491cbea2030152f9b3046d8a4"
                            },
                            "FOXXSID": {
                              "type": "string",
                              "example": "6598424962c9b22c69779534f94bc6ea5454242ca6520a172a0d5eb97e728d1e"
                            }
                          }
                        },
                        "suffix": {
                          "type": "string",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "util",
                            "echo",
                            "get",
                            "request"
                          ]
                        },
                        "rawSuffix": {
                          "type": "string",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "util",
                            "echo",
                            "get",
                            "request"
                          ]
                        },
                        "urlParameters": {
                          "type": "object"
                        }
                      }
                    },
                    "context": {
                      "type": "object",
                      "properties": {
                        "argv": {
                          "type": "string",
                          "example": []
                        },
                        "basePath": {
                          "type": "string",
                          "example": "/var/lib/arangodb3-apps/_db/EUFGIS/auth/APP"
                        },
                        "baseUrl": {
                          "type": "string",
                          "example": "/_db/EUFGIS/auth"
                        },
                        "collectionPrefix": {
                          "type": "string",
                          "example": "auth_"
                        },
                        "configuration": {
                          "type": "object",
                          "properties": {
                            "adminCode": {
                              "type": "string",
                              "example": "admin"
                            },
                            "adminPass": {
                              "type": "string",
                              "example": "secret"
                            },
                            "dataDir": {
                              "type": "string",
                              "example": "data"
                            },
                            "language": {
                              "type": "string",
                              "example": "iso_639_3_eng"
                            },
                            "cookie": {
                              "type": "string",
                              "example": "FOXXSID"
                            },
                            "method": {
                              "type": "string",
                              "example": "sha256"
                            },
                            "saltLength": {
                              "type": "integer",
                              "format": "int64",
                              "example": 16
                            },
                            "secretLength": {
                              "type": "integer",
                              "format": "int64",
                              "example": 48
                            },
                            "timeToLive": {
                              "type": "integer",
                              "format": "int64",
                              "example": 604800
                            },
                            "collectionUser": {
                              "type": "string",
                              "example": "users"
                            },
                            "collectionSession": {
                              "type": "string",
                              "example": "sessions"
                            },
                            "collectionSettings": {
                              "type": "string",
                              "example": "settings"
                            },
                            "collectionError": {
                              "type": "string",
                              "example": "errors"
                            },
                            "collectionLog": {
                              "type": "string",
                              "example": "logs"
                            }
                          }
                        },
                        "dependencies": {
                          "type": "object"
                        },
                        "isDevelopment": {
                          "type": "boolean"
                        },
                        "isProduction": {
                          "type": "boolean"
                        },
                        "manifest": {
                          "type": "object",
                          "properties": {
                            "$schema": {
                              "type": "string",
                              "example": "http://json.schemastore.org/foxx-manifest"
                            },
                            "name": {
                              "type": "string",
                              "example": "Data-Dictionary"
                            },
                            "version": {
                              "type": "string",
                              "example": "0.1.1"
                            },
                            "license": {
                              "type": "string",
                              "example": "Apache 2"
                            },
                            "author": {
                              "type": "string",
                              "example": "Milko Škofič"
                            },
                            "description": {
                              "type": "string",
                              "example": "Data dictionary service."
                            },
                            "engines": {
                              "type": "object",
                              "properties": {
                                "arangodb": {
                                  "type": "string",
                                  "example": "^3.0.0"
                                }
                              }
                            },
                            "main": {
                              "type": "string",
                              "example": "main.js"
                            },
                            "configuration": {
                              "type": "object",
                              "properties": {
                                "adminCode": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Default administrator user code."
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "admin"
                                    }
                                  }
                                },
                                "adminPass": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Default administrator user password."
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "password"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "secret"
                                    }
                                  }
                                },
                                "dataDir": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Data directory name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "data"
                                    }
                                  }
                                },
                                "language": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Default language ISO code."
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "iso_639_3_eng"
                                    }
                                  }
                                },
                                "cookie": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Cookie name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "FOXXSID"
                                    }
                                  }
                                },
                                "method": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Hashing algorithm for creating password hashes"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "sha256"
                                    }
                                  }
                                },
                                "saltLength": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Length of the salts that will be generated for password hashes"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "integer"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "integer",
                                      "format": "int64",
                                      "example": 16
                                    }
                                  }
                                },
                                "secretLength": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Length of the cookie secret"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "integer"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "integer",
                                      "format": "int64",
                                      "example": 48
                                    }
                                  }
                                },
                                "timeToLive": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Cookie time to live (60 * 60 * 24 * 7)"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "integer"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "integer",
                                      "format": "int64",
                                      "example": 604800
                                    }
                                  }
                                },
                                "collectionUser": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Users collection name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "users"
                                    }
                                  }
                                },
                                "collectionSession": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Sessions collection name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "sessions"
                                    }
                                  }
                                },
                                "collectionSettings": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Settings collection name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "settings"
                                    }
                                  }
                                },
                                "collectionError": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Errors collection name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "errors"
                                    }
                                  }
                                },
                                "collectionLog": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Logs collection name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "logs"
                                    }
                                  }
                                }
                              }
                            },
                            "dependencies": {
                              "type": "object"
                            },
                            "scripts": {
                              "type": "object",
                              "properties": {
                                "setup": {
                                  "type": "string",
                                  "example": "scripts/setup.js"
                                },
                                "teardown": {
                                  "type": "string",
                                  "example": "scripts/teardown.js"
                                }
                              }
                            },
                            "tests": {
                              "type": "string",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "test/functions/test_ItWorks.js",
                                "test/functions/test_ItWorks.js",
                                "test/functions/test_validateDescriptor.js",
                                "test/functions/test_validateDataBlock.js",
                                "test/functions/test_validateScalar.js",
                                "test/functions/test_validateArray.js",
                                "test/functions/test_validateSet.js",
                                "test/functions/test_validateDictionary.js",
                                "test/functions/test_validateValue.js",
                                "test/functions/test_validateBoolean.js",
                                "test/functions/test_validateInteger.js",
                                "test/functions/test_validateNumber.js",
                                "test/functions/test_validateTimestamp.js",
                                "test/functions/test_validateString.js"
                              ]
                            }
                          }
                        },
                        "mount": {
                          "type": "string",
                          "example": "/auth"
                        }
                      }
                    },
                    "suffix": {
                      "type": "string",
                      "example": ""
                    },
                    "baseUrl": {
                      "type": "string",
                      "example": "/_db/EUFGIS"
                    },
                    "path": {
                      "type": "string",
                      "example": "/util/echo/get/request"
                    },
                    "pathParams": {
                      "type": "object"
                    },
                    "queryParams": {
                      "type": "object"
                    },
                    "trustProxy": {
                      "type": "boolean"
                    },
                    "protocol": {
                      "type": "string",
                      "example": "http"
                    },
                    "hostname": {
                      "type": "string",
                      "example": "localhost"
                    },
                    "port": {
                      "type": "integer",
                      "format": "int64",
                      "example": 8529
                    },
                    "remoteAddress": {
                      "type": "string",
                      "example": "192.168.65.1"
                    },
                    "remoteAddresses": {
                      "type": "string",
                      "items": {
                        "type": "string",
                        "format": "ip-address"
                      },
                      "example": [
                        "192.168.65.1"
                      ]
                    },
                    "remotePort": {
                      "type": "integer",
                      "format": "int64",
                      "example": 34726
                    },
                    "sessionStorage": {
                      "type": "object"
                    },
                    "session": {
                      "type": "object",
                      "properties": {
                        "_key": {
                          "type": "string",
                          "example": "6598424962c9b22c69779534f94bc6ea5454242ca6520a172a0d5eb97e728d1e"
                        },
                        "uid": {
                          "type": "string",
                          "example": "284310178873"
                        },
                        "created": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1716656045839
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "object",
                              "properties": {
                                "username": {
                                  "type": "string",
                                  "example": "admin"
                                },
                                "role": {
                                  "type": "string",
                                  "items": {
                                    "type": "string"
                                  },
                                  "example": [
                                    "admin"
                                  ]
                                },
                                "default": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Set-Cookie": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "FOXXSID=6598424962c9b22c69779534f94bc6ea5454242ca6520a172a0d5eb97e728d1e; expires=Sat, 01-Jun-2024 17:27:20 GMT; path=/, FOXXSID.sig=d4652ca7387d996a10d099bdebafbf8b3cc7b4f491cbea2030152f9b3046d8a4; expires=Sat, 01-Jun-2024 17:27:20 GMT; path=/"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "4567"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{Protocol}:/{Host}:{Port}/_db/{Db}/{Path}/util/echo/get/response/": {
      "get": {
        "summary": "Mirror the GET response",
        "description": "This service will return the full GET response.\n\n*In order to use this service, the current user must have the admin role*.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `500`: Other errors.\n",
        "operationId": "d5c228dd-ed65-40d2-8131-d2db03d4b759",
        "parameters": [],
        "requestBody": {
          "description": "This service will return the full GET response.\n\n*In order to use this service, the current user must have the admin role*.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `500`: Other errors.\n",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_raw": {
                      "type": "object"
                    },
                    "_responses": {
                      "type": "object"
                    },
                    "context": {
                      "type": "object",
                      "properties": {
                        "argv": {
                          "type": "string",
                          "example": []
                        },
                        "basePath": {
                          "type": "string",
                          "example": "/var/lib/arangodb3-apps/_db/EUFGIS/auth/APP"
                        },
                        "baseUrl": {
                          "type": "string",
                          "example": "/_db/EUFGIS/auth"
                        },
                        "collectionPrefix": {
                          "type": "string",
                          "example": "auth_"
                        },
                        "configuration": {
                          "type": "object",
                          "properties": {
                            "adminCode": {
                              "type": "string",
                              "example": "admin"
                            },
                            "adminPass": {
                              "type": "string",
                              "example": "secret"
                            },
                            "dataDir": {
                              "type": "string",
                              "example": "data"
                            },
                            "language": {
                              "type": "string",
                              "example": "iso_639_3_eng"
                            },
                            "cookie": {
                              "type": "string",
                              "example": "FOXXSID"
                            },
                            "method": {
                              "type": "string",
                              "example": "sha256"
                            },
                            "saltLength": {
                              "type": "integer",
                              "format": "int64",
                              "example": 16
                            },
                            "secretLength": {
                              "type": "integer",
                              "format": "int64",
                              "example": 48
                            },
                            "timeToLive": {
                              "type": "integer",
                              "format": "int64",
                              "example": 604800
                            },
                            "collectionUser": {
                              "type": "string",
                              "example": "users"
                            },
                            "collectionSession": {
                              "type": "string",
                              "example": "sessions"
                            },
                            "collectionSettings": {
                              "type": "string",
                              "example": "settings"
                            },
                            "collectionError": {
                              "type": "string",
                              "example": "errors"
                            },
                            "collectionLog": {
                              "type": "string",
                              "example": "logs"
                            }
                          }
                        },
                        "dependencies": {
                          "type": "object"
                        },
                        "isDevelopment": {
                          "type": "boolean"
                        },
                        "isProduction": {
                          "type": "boolean"
                        },
                        "manifest": {
                          "type": "object",
                          "properties": {
                            "$schema": {
                              "type": "string",
                              "example": "http://json.schemastore.org/foxx-manifest"
                            },
                            "name": {
                              "type": "string",
                              "example": "Data-Dictionary"
                            },
                            "version": {
                              "type": "string",
                              "example": "0.1.1"
                            },
                            "license": {
                              "type": "string",
                              "example": "Apache 2"
                            },
                            "author": {
                              "type": "string",
                              "example": "Milko Škofič"
                            },
                            "description": {
                              "type": "string",
                              "example": "Data dictionary service."
                            },
                            "engines": {
                              "type": "object",
                              "properties": {
                                "arangodb": {
                                  "type": "string",
                                  "example": "^3.0.0"
                                }
                              }
                            },
                            "main": {
                              "type": "string",
                              "example": "main.js"
                            },
                            "configuration": {
                              "type": "object",
                              "properties": {
                                "adminCode": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Default administrator user code."
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "admin"
                                    }
                                  }
                                },
                                "adminPass": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Default administrator user password."
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "password"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "secret"
                                    }
                                  }
                                },
                                "dataDir": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Data directory name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "data"
                                    }
                                  }
                                },
                                "language": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Default language ISO code."
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "iso_639_3_eng"
                                    }
                                  }
                                },
                                "cookie": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Cookie name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "FOXXSID"
                                    }
                                  }
                                },
                                "method": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Hashing algorithm for creating password hashes"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "sha256"
                                    }
                                  }
                                },
                                "saltLength": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Length of the salts that will be generated for password hashes"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "integer"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "integer",
                                      "format": "int64",
                                      "example": 16
                                    }
                                  }
                                },
                                "secretLength": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Length of the cookie secret"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "integer"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "integer",
                                      "format": "int64",
                                      "example": 48
                                    }
                                  }
                                },
                                "timeToLive": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Cookie time to live (60 * 60 * 24 * 7)"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "integer"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "integer",
                                      "format": "int64",
                                      "example": 604800
                                    }
                                  }
                                },
                                "collectionUser": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Users collection name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "users"
                                    }
                                  }
                                },
                                "collectionSession": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Sessions collection name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "sessions"
                                    }
                                  }
                                },
                                "collectionSettings": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Settings collection name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "settings"
                                    }
                                  }
                                },
                                "collectionError": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Errors collection name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "errors"
                                    }
                                  }
                                },
                                "collectionLog": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Logs collection name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "logs"
                                    }
                                  }
                                }
                              }
                            },
                            "dependencies": {
                              "type": "object"
                            },
                            "scripts": {
                              "type": "object",
                              "properties": {
                                "setup": {
                                  "type": "string",
                                  "example": "scripts/setup.js"
                                },
                                "teardown": {
                                  "type": "string",
                                  "example": "scripts/teardown.js"
                                }
                              }
                            },
                            "tests": {
                              "type": "string",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "test/functions/test_ItWorks.js",
                                "test/functions/test_ItWorks.js",
                                "test/functions/test_validateDescriptor.js",
                                "test/functions/test_validateDataBlock.js",
                                "test/functions/test_validateScalar.js",
                                "test/functions/test_validateArray.js",
                                "test/functions/test_validateSet.js",
                                "test/functions/test_validateDictionary.js",
                                "test/functions/test_validateValue.js",
                                "test/functions/test_validateBoolean.js",
                                "test/functions/test_validateInteger.js",
                                "test/functions/test_validateNumber.js",
                                "test/functions/test_validateTimestamp.js",
                                "test/functions/test_validateString.js"
                              ]
                            }
                          }
                        },
                        "mount": {
                          "type": "string",
                          "example": "/auth"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Set-Cookie": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "FOXXSID=6598424962c9b22c69779534f94bc6ea5454242ca6520a172a0d5eb97e728d1e; expires=Sat, 01-Jun-2024 17:10:12 GMT; path=/, FOXXSID.sig=d4652ca7387d996a10d099bdebafbf8b3cc7b4f491cbea2030152f9b3046d8a4; expires=Sat, 01-Jun-2024 17:10:12 GMT; path=/"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "3073"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{Protocol}:/{Host}:{Port}/_db/{Db}/{Path}/util/echo/post/request/": {
      "post": {
        "summary": "Mirror the POST request",
        "description": "This service will return the full POST request.\n\n*In order to use this service, the current user must have the admin role*.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `500`: Other errors.\n\n\n",
        "operationId": "1c1f3f4d-4d43-41e6-8784-e79a37a7c669",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json; charset=utf-8",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "This service will return the full POST request.\n\n*In order to use this service, the current user must have the admin role*.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `500`: Other errors.\n\n\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "property": {
                    "type": "string",
                    "example": "property value"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_url": {
                      "type": "object",
                      "properties": {
                        "protocol": {
                          "nullable": true
                        },
                        "slashes": {
                          "nullable": true
                        },
                        "auth": {
                          "nullable": true
                        },
                        "host": {
                          "nullable": true
                        },
                        "port": {
                          "nullable": true
                        },
                        "hostname": {
                          "nullable": true
                        },
                        "hash": {
                          "nullable": true
                        },
                        "search": {
                          "nullable": true
                        },
                        "query": {
                          "nullable": true
                        },
                        "pathname": {
                          "type": "string",
                          "example": "/auth/util/echo/post/request"
                        },
                        "path": {
                          "type": "string",
                          "example": "/auth/util/echo/post/request"
                        },
                        "href": {
                          "type": "string",
                          "example": "/auth/util/echo/post/request"
                        }
                      }
                    },
                    "_raw": {
                      "type": "object",
                      "properties": {
                        "authorized": {
                          "type": "boolean"
                        },
                        "user": {
                          "nullable": true
                        },
                        "isAdminUser": {
                          "type": "boolean"
                        },
                        "database": {
                          "type": "string",
                          "example": "EUFGIS"
                        },
                        "url": {
                          "type": "string",
                          "example": "/auth/util/echo/post/request"
                        },
                        "protocol": {
                          "type": "string",
                          "example": "http"
                        },
                        "server": {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "example": "0.0.0.0"
                            },
                            "port": {
                              "type": "integer",
                              "format": "int64",
                              "example": 8529
                            },
                            "endpoint": {
                              "type": "string",
                              "example": "http://0.0.0.0:8529"
                            }
                          }
                        },
                        "portType": {
                          "type": "string",
                          "example": "tcp/ip"
                        },
                        "client": {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "example": "192.168.65.1"
                            },
                            "port": {
                              "type": "integer",
                              "format": "int64",
                              "example": 55657
                            },
                            "id": {
                              "type": "string",
                              "example": "0"
                            }
                          }
                        },
                        "internals": {
                          "type": "object"
                        },
                        "prefix": {
                          "type": "string",
                          "example": "/"
                        },
                        "headers": {
                          "type": "object",
                          "properties": {
                            "content-length": {
                              "type": "string",
                              "example": "29"
                            },
                            "content-type": {
                              "type": "string",
                              "example": "application/json; charset=utf-8"
                            },
                            "accept": {
                              "type": "string",
                              "example": "application/json; charset=utf-8"
                            },
                            "user-agent": {
                              "type": "string",
                              "example": "RapidAPI/4.2.2 (Macintosh; OS X/13.6.7) GCDHTTPRequest"
                            },
                            "connection": {
                              "type": "string",
                              "example": "close"
                            },
                            "host": {
                              "type": "string",
                              "example": "localhost:8529"
                            }
                          }
                        },
                        "requestType": {
                          "type": "string",
                          "example": "POST"
                        },
                        "requestBody": {
                          "type": "string",
                          "example": "{\"property\":\"property value\"}"
                        },
                        "parameters": {
                          "type": "object"
                        },
                        "cookies": {
                          "type": "object",
                          "properties": {
                            "FOXXSID.sig": {
                              "type": "string",
                              "example": "d4652ca7387d996a10d099bdebafbf8b3cc7b4f491cbea2030152f9b3046d8a4"
                            },
                            "FOXXSID": {
                              "type": "string",
                              "example": "6598424962c9b22c69779534f94bc6ea5454242ca6520a172a0d5eb97e728d1e"
                            }
                          }
                        },
                        "suffix": {
                          "type": "string",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "util",
                            "echo",
                            "post",
                            "request"
                          ]
                        },
                        "rawSuffix": {
                          "type": "string",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "util",
                            "echo",
                            "post",
                            "request"
                          ]
                        },
                        "urlParameters": {
                          "type": "object"
                        }
                      }
                    },
                    "context": {
                      "type": "object",
                      "properties": {
                        "argv": {
                          "type": "string",
                          "example": []
                        },
                        "basePath": {
                          "type": "string",
                          "example": "/var/lib/arangodb3-apps/_db/EUFGIS/auth/APP"
                        },
                        "baseUrl": {
                          "type": "string",
                          "example": "/_db/EUFGIS/auth"
                        },
                        "collectionPrefix": {
                          "type": "string",
                          "example": "auth_"
                        },
                        "configuration": {
                          "type": "object",
                          "properties": {
                            "adminCode": {
                              "type": "string",
                              "example": "admin"
                            },
                            "adminPass": {
                              "type": "string",
                              "example": "secret"
                            },
                            "dataDir": {
                              "type": "string",
                              "example": "data"
                            },
                            "language": {
                              "type": "string",
                              "example": "iso_639_3_eng"
                            },
                            "cookie": {
                              "type": "string",
                              "example": "FOXXSID"
                            },
                            "method": {
                              "type": "string",
                              "example": "sha256"
                            },
                            "saltLength": {
                              "type": "integer",
                              "format": "int64",
                              "example": 16
                            },
                            "secretLength": {
                              "type": "integer",
                              "format": "int64",
                              "example": 48
                            },
                            "timeToLive": {
                              "type": "integer",
                              "format": "int64",
                              "example": 604800
                            },
                            "collectionUser": {
                              "type": "string",
                              "example": "users"
                            },
                            "collectionSession": {
                              "type": "string",
                              "example": "sessions"
                            },
                            "collectionSettings": {
                              "type": "string",
                              "example": "settings"
                            },
                            "collectionError": {
                              "type": "string",
                              "example": "errors"
                            },
                            "collectionLog": {
                              "type": "string",
                              "example": "logs"
                            }
                          }
                        },
                        "dependencies": {
                          "type": "object"
                        },
                        "isDevelopment": {
                          "type": "boolean"
                        },
                        "isProduction": {
                          "type": "boolean"
                        },
                        "manifest": {
                          "type": "object",
                          "properties": {
                            "$schema": {
                              "type": "string",
                              "example": "http://json.schemastore.org/foxx-manifest"
                            },
                            "name": {
                              "type": "string",
                              "example": "Data-Dictionary"
                            },
                            "version": {
                              "type": "string",
                              "example": "0.1.1"
                            },
                            "license": {
                              "type": "string",
                              "example": "Apache 2"
                            },
                            "author": {
                              "type": "string",
                              "example": "Milko Škofič"
                            },
                            "description": {
                              "type": "string",
                              "example": "Data dictionary service."
                            },
                            "engines": {
                              "type": "object",
                              "properties": {
                                "arangodb": {
                                  "type": "string",
                                  "example": "^3.0.0"
                                }
                              }
                            },
                            "main": {
                              "type": "string",
                              "example": "main.js"
                            },
                            "configuration": {
                              "type": "object",
                              "properties": {
                                "adminCode": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Default administrator user code."
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "admin"
                                    }
                                  }
                                },
                                "adminPass": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Default administrator user password."
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "password"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "secret"
                                    }
                                  }
                                },
                                "dataDir": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Data directory name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "data"
                                    }
                                  }
                                },
                                "language": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Default language ISO code."
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "iso_639_3_eng"
                                    }
                                  }
                                },
                                "cookie": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Cookie name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "FOXXSID"
                                    }
                                  }
                                },
                                "method": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Hashing algorithm for creating password hashes"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "sha256"
                                    }
                                  }
                                },
                                "saltLength": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Length of the salts that will be generated for password hashes"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "integer"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "integer",
                                      "format": "int64",
                                      "example": 16
                                    }
                                  }
                                },
                                "secretLength": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Length of the cookie secret"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "integer"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "integer",
                                      "format": "int64",
                                      "example": 48
                                    }
                                  }
                                },
                                "timeToLive": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Cookie time to live (60 * 60 * 24 * 7)"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "integer"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "integer",
                                      "format": "int64",
                                      "example": 604800
                                    }
                                  }
                                },
                                "collectionUser": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Users collection name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "users"
                                    }
                                  }
                                },
                                "collectionSession": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Sessions collection name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "sessions"
                                    }
                                  }
                                },
                                "collectionSettings": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Settings collection name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "settings"
                                    }
                                  }
                                },
                                "collectionError": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Errors collection name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "errors"
                                    }
                                  }
                                },
                                "collectionLog": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Logs collection name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "logs"
                                    }
                                  }
                                }
                              }
                            },
                            "dependencies": {
                              "type": "object"
                            },
                            "scripts": {
                              "type": "object",
                              "properties": {
                                "setup": {
                                  "type": "string",
                                  "example": "scripts/setup.js"
                                },
                                "teardown": {
                                  "type": "string",
                                  "example": "scripts/teardown.js"
                                }
                              }
                            },
                            "tests": {
                              "type": "string",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "test/functions/test_ItWorks.js",
                                "test/functions/test_ItWorks.js",
                                "test/functions/test_validateDescriptor.js",
                                "test/functions/test_validateDataBlock.js",
                                "test/functions/test_validateScalar.js",
                                "test/functions/test_validateArray.js",
                                "test/functions/test_validateSet.js",
                                "test/functions/test_validateDictionary.js",
                                "test/functions/test_validateValue.js",
                                "test/functions/test_validateBoolean.js",
                                "test/functions/test_validateInteger.js",
                                "test/functions/test_validateNumber.js",
                                "test/functions/test_validateTimestamp.js",
                                "test/functions/test_validateString.js"
                              ]
                            }
                          }
                        },
                        "mount": {
                          "type": "string",
                          "example": "/auth"
                        }
                      }
                    },
                    "suffix": {
                      "type": "string",
                      "example": ""
                    },
                    "baseUrl": {
                      "type": "string",
                      "example": "/_db/EUFGIS"
                    },
                    "path": {
                      "type": "string",
                      "example": "/util/echo/post/request"
                    },
                    "pathParams": {
                      "type": "object"
                    },
                    "queryParams": {
                      "type": "object"
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "property": {
                          "type": "string",
                          "example": "property value"
                        }
                      }
                    },
                    "rawBody": {
                      "type": "string",
                      "example": "{\"property\":\"property value\"}"
                    },
                    "trustProxy": {
                      "type": "boolean"
                    },
                    "protocol": {
                      "type": "string",
                      "example": "http"
                    },
                    "hostname": {
                      "type": "string",
                      "example": "localhost"
                    },
                    "port": {
                      "type": "integer",
                      "format": "int64",
                      "example": 8529
                    },
                    "remoteAddress": {
                      "type": "string",
                      "example": "192.168.65.1"
                    },
                    "remoteAddresses": {
                      "type": "string",
                      "items": {
                        "type": "string",
                        "format": "ip-address"
                      },
                      "example": [
                        "192.168.65.1"
                      ]
                    },
                    "remotePort": {
                      "type": "integer",
                      "format": "int64",
                      "example": 55657
                    },
                    "sessionStorage": {
                      "type": "object"
                    },
                    "session": {
                      "type": "object",
                      "properties": {
                        "_key": {
                          "type": "string",
                          "example": "6598424962c9b22c69779534f94bc6ea5454242ca6520a172a0d5eb97e728d1e"
                        },
                        "uid": {
                          "type": "string",
                          "example": "284310178873"
                        },
                        "created": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1716656045839
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "object",
                              "properties": {
                                "username": {
                                  "type": "string",
                                  "example": "admin"
                                },
                                "role": {
                                  "type": "string",
                                  "items": {
                                    "type": "string"
                                  },
                                  "example": [
                                    "admin"
                                  ]
                                },
                                "default": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Set-Cookie": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "FOXXSID=6598424962c9b22c69779534f94bc6ea5454242ca6520a172a0d5eb97e728d1e; expires=Sat, 01-Jun-2024 17:27:23 GMT; path=/, FOXXSID.sig=d4652ca7387d996a10d099bdebafbf8b3cc7b4f491cbea2030152f9b3046d8a4; expires=Sat, 01-Jun-2024 17:27:23 GMT; path=/"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "4779"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{Protocol}:/{Host}:{Port}/_db/{Db}/{Path}/util/echo/post/response/": {
      "post": {
        "summary": "Mirror the POST response",
        "description": "This service will return the full POST response.\n\n*In order to use this service, the current user must have the admin role*.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `500`: Other errors.\n",
        "operationId": "534e4e55-489b-4bc3-8dd3-b8292afffbe8",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json; charset=utf-8",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "This service will return the full POST response.\n\n*In order to use this service, the current user must have the admin role*.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `500`: Other errors.\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "property": {
                    "type": "string",
                    "example": "Property value"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_raw": {
                      "type": "object"
                    },
                    "_responses": {
                      "type": "object"
                    },
                    "context": {
                      "type": "object",
                      "properties": {
                        "argv": {
                          "type": "string",
                          "example": []
                        },
                        "basePath": {
                          "type": "string",
                          "example": "/var/lib/arangodb3-apps/_db/EUFGIS/auth/APP"
                        },
                        "baseUrl": {
                          "type": "string",
                          "example": "/_db/EUFGIS/auth"
                        },
                        "collectionPrefix": {
                          "type": "string",
                          "example": "auth_"
                        },
                        "configuration": {
                          "type": "object",
                          "properties": {
                            "adminCode": {
                              "type": "string",
                              "example": "admin"
                            },
                            "adminPass": {
                              "type": "string",
                              "example": "secret"
                            },
                            "dataDir": {
                              "type": "string",
                              "example": "data"
                            },
                            "language": {
                              "type": "string",
                              "example": "iso_639_3_eng"
                            },
                            "cookie": {
                              "type": "string",
                              "example": "FOXXSID"
                            },
                            "method": {
                              "type": "string",
                              "example": "sha256"
                            },
                            "saltLength": {
                              "type": "integer",
                              "format": "int64",
                              "example": 16
                            },
                            "secretLength": {
                              "type": "integer",
                              "format": "int64",
                              "example": 48
                            },
                            "timeToLive": {
                              "type": "integer",
                              "format": "int64",
                              "example": 604800
                            },
                            "collectionUser": {
                              "type": "string",
                              "example": "users"
                            },
                            "collectionSession": {
                              "type": "string",
                              "example": "sessions"
                            },
                            "collectionSettings": {
                              "type": "string",
                              "example": "settings"
                            },
                            "collectionError": {
                              "type": "string",
                              "example": "errors"
                            },
                            "collectionLog": {
                              "type": "string",
                              "example": "logs"
                            }
                          }
                        },
                        "dependencies": {
                          "type": "object"
                        },
                        "isDevelopment": {
                          "type": "boolean"
                        },
                        "isProduction": {
                          "type": "boolean"
                        },
                        "manifest": {
                          "type": "object",
                          "properties": {
                            "$schema": {
                              "type": "string",
                              "example": "http://json.schemastore.org/foxx-manifest"
                            },
                            "name": {
                              "type": "string",
                              "example": "Data-Dictionary"
                            },
                            "version": {
                              "type": "string",
                              "example": "0.1.1"
                            },
                            "license": {
                              "type": "string",
                              "example": "Apache 2"
                            },
                            "author": {
                              "type": "string",
                              "example": "Milko Škofič"
                            },
                            "description": {
                              "type": "string",
                              "example": "Data dictionary service."
                            },
                            "engines": {
                              "type": "object",
                              "properties": {
                                "arangodb": {
                                  "type": "string",
                                  "example": "^3.0.0"
                                }
                              }
                            },
                            "main": {
                              "type": "string",
                              "example": "main.js"
                            },
                            "configuration": {
                              "type": "object",
                              "properties": {
                                "adminCode": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Default administrator user code."
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "admin"
                                    }
                                  }
                                },
                                "adminPass": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Default administrator user password."
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "password"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "secret"
                                    }
                                  }
                                },
                                "dataDir": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Data directory name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "data"
                                    }
                                  }
                                },
                                "language": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Default language ISO code."
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "iso_639_3_eng"
                                    }
                                  }
                                },
                                "cookie": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Cookie name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "FOXXSID"
                                    }
                                  }
                                },
                                "method": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Hashing algorithm for creating password hashes"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "sha256"
                                    }
                                  }
                                },
                                "saltLength": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Length of the salts that will be generated for password hashes"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "integer"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "integer",
                                      "format": "int64",
                                      "example": 16
                                    }
                                  }
                                },
                                "secretLength": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Length of the cookie secret"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "integer"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "integer",
                                      "format": "int64",
                                      "example": 48
                                    }
                                  }
                                },
                                "timeToLive": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Cookie time to live (60 * 60 * 24 * 7)"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "integer"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "integer",
                                      "format": "int64",
                                      "example": 604800
                                    }
                                  }
                                },
                                "collectionUser": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Users collection name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "users"
                                    }
                                  }
                                },
                                "collectionSession": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Sessions collection name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "sessions"
                                    }
                                  }
                                },
                                "collectionSettings": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Settings collection name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "settings"
                                    }
                                  }
                                },
                                "collectionError": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Errors collection name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "errors"
                                    }
                                  }
                                },
                                "collectionLog": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "example": "Logs collection name"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "default": {
                                      "type": "string",
                                      "example": "logs"
                                    }
                                  }
                                }
                              }
                            },
                            "dependencies": {
                              "type": "object"
                            },
                            "scripts": {
                              "type": "object",
                              "properties": {
                                "setup": {
                                  "type": "string",
                                  "example": "scripts/setup.js"
                                },
                                "teardown": {
                                  "type": "string",
                                  "example": "scripts/teardown.js"
                                }
                              }
                            },
                            "tests": {
                              "type": "string",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "test/functions/test_ItWorks.js",
                                "test/functions/test_ItWorks.js",
                                "test/functions/test_validateDescriptor.js",
                                "test/functions/test_validateDataBlock.js",
                                "test/functions/test_validateScalar.js",
                                "test/functions/test_validateArray.js",
                                "test/functions/test_validateSet.js",
                                "test/functions/test_validateDictionary.js",
                                "test/functions/test_validateValue.js",
                                "test/functions/test_validateBoolean.js",
                                "test/functions/test_validateInteger.js",
                                "test/functions/test_validateNumber.js",
                                "test/functions/test_validateTimestamp.js",
                                "test/functions/test_validateString.js"
                              ]
                            }
                          }
                        },
                        "mount": {
                          "type": "string",
                          "example": "/auth"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Set-Cookie": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "FOXXSID=6598424962c9b22c69779534f94bc6ea5454242ca6520a172a0d5eb97e728d1e; expires=Sat, 01-Jun-2024 17:17:39 GMT; path=/, FOXXSID.sig=d4652ca7387d996a10d099bdebafbf8b3cc7b4f491cbea2030152f9b3046d8a4; expires=Sat, 01-Jun-2024 17:17:39 GMT; path=/"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "3073"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{Protocol}:/{Host}:{Port}/_db/{Db}/{Path}/util/path/base/": {
      "get": {
        "summary": "Return the base path",
        "description": "The service will return the base path of the service application.\n\n*In order to use this service, the current user must have the admin role*.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `500`: Other errors.\n",
        "operationId": "a265fb0d-af5d-4e25-8214-c37153723e24",
        "parameters": [],
        "requestBody": {
          "description": "The service will return the base path of the service application.\n\n*In order to use this service, the current user must have the admin role*.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `500`: Other errors.\n",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "value": "/var/lib/arangodb3-apps/_db/EUFGIS/auth/APP"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{Protocol}:/{Host}:{Port}/_db/{Db}/{Path}/util/path/temp/": {
      "get": {
        "summary": "Return the temp path",
        "description": "The service will return the temporary files path of the service application.\n\n*In order to use this service, the current user must have the admin role*.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `500`: Other errors.\n",
        "operationId": "ed93b406-0409-426b-accd-62e50c8e1db2",
        "parameters": [],
        "requestBody": {
          "description": "The service will return the temporary files path of the service application.\n\n*In order to use this service, the current user must have the admin role*.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `500`: Other errors.\n",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "value": "/tmp/arangod_rQ6osW"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{Protocol}:/{Host}:{Port}/_db/{Db}/{Path}/util/file/temp/": {
      "get": {
        "summary": "Return a temp file path",
        "description": "The service will return an available temp file path without creating the file.\n\n*In order to use this service, the current user must have the admin role*.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `500`: Other errors.\n",
        "operationId": "a43dbd81-8a76-41c4-87e9-563bfd1e32e0",
        "parameters": [],
        "requestBody": {
          "description": "The service will return an available temp file path without creating the file.\n\n*In order to use this service, the current user must have the admin role*.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `500`: Other errors.\n",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "value": "/tmp/arangod_rQ6osW/tmp/arangod_rQ6osW/tmp-1-3231787517"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{Protocol}:/{Host}:{Port}/_db/{Db}/{Path}/util/session/": {
      "get": {
        "summary": "Return the current session",
        "description": "The service will return the current session record.\n\n*In order to use this service, the current user must have the admin role*.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `500`: Other errors.\n",
        "operationId": "5b2574f0-cde7-4198-89fb-c4d8193eae99",
        "parameters": [],
        "requestBody": {
          "description": "The service will return the current session record.\n\n*In order to use this service, the current user must have the admin role*.\n\nThe following errors can be returned:\n- `401`: **No current user**: the service will return this code if no user is currently logged in.\n- `403`: **Unauthorised user**: the service will return this code if the current user is not an administrator.\n- `500`: Other errors.\n",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_key": {
                      "type": "string",
                      "example": "6598424962c9b22c69779534f94bc6ea5454242ca6520a172a0d5eb97e728d1e"
                    },
                    "uid": {
                      "type": "string",
                      "example": "284310178873"
                    },
                    "created": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1716656045839
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "username": {
                              "type": "string",
                              "example": "admin"
                            },
                            "role": {
                              "type": "string",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "admin"
                              ]
                            },
                            "default": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Set-Cookie": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "FOXXSID=6598424962c9b22c69779534f94bc6ea5454242ca6520a172a0d5eb97e728d1e; expires=Sat, 01-Jun-2024 17:27:27 GMT; path=/, FOXXSID.sig=d4652ca7387d996a10d099bdebafbf8b3cc7b4f491cbea2030152f9b3046d8a4; expires=Sat, 01-Jun-2024 17:27:27 GMT; path=/"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "189"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              }
            }
          }
        },
        "security": []
      }
    }
  },
  "components": {}
}